AWSTemplateFormatVersion: 2010-09-09
Description: Stack for launching Flghts App

Parameters:
  dockerImage:
    Type: String
  dockerPortMapping:
    Type: String

Resources:

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      IpAddressType: ipv4
      Scheme: internet-facing
      Name: flights-load-balancer
      SecurityGroups:
        - sg-01b1f8744c5a8b453
      Subnets:
        - subnet-08f24cd4fa653f784
        - subnet-08a67d21d4dc38d8a
      Tags:
        - Key: env
          Value: dev

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: '|Ref|WebAppTargetGroup'
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: '80'
      Protocol: HTTP

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: '8080'
      Protocol: 'HTTP'
      VpcId: vpc-0b22f2c3b58b5f60a
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /actuator/health
      HealthCheckPort: 8080
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Tags:
        - Key: env
          Value: dev

  DeployAppLaunchConfig:
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        ImageId: ami-0e9fdc42464552f08
        InstanceType: t2.micro
        KeyName: flights-access
        SecurityGroups:
          - sg-0b75d6fdb83a9a55b
        UserData:
          Fn::Base64:
            Fn::Sub: |
              #!/bin/bash -xe
              /run_container.sh ${dockerImage} ${dockerPortMapping}

  DeployAppASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - subnet-0844e8ddb642e360f
        - subnet-0f8f952fa7298e790
      DesiredCapacity: 2
      LaunchConfigurationName: '|Ref|DeployAppLaunchConfig'
      TargetGroupARNs:
        - '|Ref|WebAppTargetGroup'
      MaxSize: 2
      MinSize: 2
      Tags:
        - Key: env
          Value: dev
          PropagateAtLaunch: True

  EndpointEcrApi:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      SubnetIds:
        - subnet-0844e8ddb642e360f
        - subnet-0f8f952fa7298e790
      SecurityGroupIds:
        - sg-0b75d6fdb83a9a55b
      ServiceName: com.amazonaws.us-east-1.ecr.api
      VpcId: vpc-0b22f2c3b58b5f60a

  EndpointEcrDkr:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      SubnetIds:
        - subnet-0844e8ddb642e360f
        - subnet-0f8f952fa7298e790
      SecurityGroupIds:
        - sg-0b75d6fdb83a9a55b
      ServiceName: com.amazonaws.us-east-1.ecr.dkr
      VpcId: vpc-0b22f2c3b58b5f60a

Outputs:
  ProjectFlights:
    Description: Web App ALB DNS Name
    Value:
      Fn::Join:
        - ''
        - - "http://"
          - Fn::GetAtt: LoadBalancer.DNSName